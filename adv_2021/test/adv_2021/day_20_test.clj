(ns adv-2021.day-20-test
  (:require
   [adv-2021.day-20 :refer [solve-1 solve-2]]
   [clojure.test :refer :all]))

(def test-inputn\n#..#.\n#....\n##..#\n..#..\n..###")

(deftest test-solutions
  (testing "Solutions are correct for example data."
    (is (= 35 (solve-1 test-input)))
    (is (= 3351 (solve-2 test-input)))))
